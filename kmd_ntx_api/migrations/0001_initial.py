# Generated by Django 2.2 on 2020-06-25 11:56

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='addresses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.CharField(max_length=34)),
                ('notary', models.CharField(max_length=34)),
                ('notary_id', models.CharField(max_length=34)),
                ('chain', models.CharField(max_length=34)),
                ('address', models.CharField(max_length=34)),
                ('pubkey', models.CharField(max_length=66)),
                ('node', models.CharField(max_length=34)),
            ],
            options={
                'db_table': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='balances',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notary', models.CharField(max_length=34)),
                ('chain', models.CharField(max_length=34)),
                ('balance', models.DecimalField(decimal_places=8, max_digits=18)),
                ('address', models.CharField(max_length=34)),
                ('season', models.CharField(max_length=34)),
                ('node', models.CharField(max_length=34)),
                ('update_time', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'balances',
            },
        ),
        migrations.CreateModel(
            name='chain_sync',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chain', models.CharField(max_length=64)),
                ('block_height', models.PositiveIntegerField()),
                ('sync_hash', models.CharField(max_length=64)),
                ('explorer_hash', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'chain_sync',
            },
        ),
        migrations.CreateModel(
            name='coin_social',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chain', models.CharField(max_length=128)),
                ('twitter', models.CharField(max_length=128)),
                ('youtube', models.CharField(max_length=128)),
                ('discord', models.CharField(max_length=128)),
                ('telegram', models.CharField(max_length=128)),
                ('github', models.CharField(max_length=128)),
                ('website', models.CharField(max_length=128)),
                ('explorer', models.CharField(max_length=128)),
                ('icon', models.CharField(max_length=128)),
                ('season', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'coin_social',
            },
        ),
        migrations.CreateModel(
            name='coins',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chain', models.CharField(max_length=34)),
                ('coins_info', django.contrib.postgres.fields.jsonb.JSONField()),
                ('electrums', django.contrib.postgres.fields.jsonb.JSONField()),
                ('electrums_ssl', django.contrib.postgres.fields.jsonb.JSONField()),
                ('explorers', django.contrib.postgres.fields.jsonb.JSONField()),
                ('dpow', django.contrib.postgres.fields.jsonb.JSONField()),
                ('dpow_active', models.PositiveIntegerField()),
                ('mm2_compatible', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'coins',
            },
        ),
        migrations.CreateModel(
            name='funding_transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chain', models.CharField(max_length=128)),
                ('txid', models.CharField(max_length=128)),
                ('vout', models.PositiveIntegerField()),
                ('amount', models.DecimalField(decimal_places=8, max_digits=18)),
                ('address', models.CharField(max_length=128)),
                ('notary', models.CharField(max_length=128)),
                ('block_hash', models.CharField(max_length=128)),
                ('block_height', models.PositiveIntegerField()),
                ('block_time', models.PositiveIntegerField()),
                ('category', models.CharField(max_length=128)),
                ('fee', models.DecimalField(decimal_places=8, max_digits=18)),
                ('season', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'funding_transactions',
            },
        ),
        migrations.CreateModel(
            name='last_btc_notarised',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notary', models.CharField(max_length=64)),
                ('txid', models.CharField(max_length=64)),
                ('block_height', models.PositiveIntegerField()),
                ('block_time', models.PositiveIntegerField()),
                ('season', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'last_btc_notarised',
            },
        ),
        migrations.CreateModel(
            name='last_notarised',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notary', models.CharField(max_length=64)),
                ('chain', models.CharField(max_length=32)),
                ('txid', models.CharField(max_length=64)),
                ('block_height', models.PositiveIntegerField()),
                ('block_time', models.PositiveIntegerField()),
                ('season', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'last_notarised',
            },
        ),
        migrations.CreateModel(
            name='mined',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block_height', models.PositiveIntegerField()),
                ('block_time', models.PositiveIntegerField()),
                ('block_datetime', models.DateTimeField()),
                ('value', models.DecimalField(decimal_places=8, max_digits=18)),
                ('address', models.CharField(max_length=34)),
                ('name', models.CharField(max_length=34)),
                ('txid', models.CharField(max_length=64)),
                ('season', models.CharField(max_length=34)),
            ],
            options={
                'db_table': 'mined',
            },
        ),
        migrations.CreateModel(
            name='mined_count_daily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mined_date', models.DateField()),
                ('notary', models.CharField(max_length=64)),
                ('blocks_mined', models.PositiveIntegerField()),
                ('sum_value_mined', models.DecimalField(decimal_places=8, max_digits=18)),
                ('time_stamp', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'mined_count_daily',
            },
        ),
        migrations.CreateModel(
            name='mined_count_season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notary', models.CharField(max_length=64)),
                ('blocks_mined', models.PositiveIntegerField()),
                ('sum_value_mined', models.DecimalField(decimal_places=8, max_digits=18)),
                ('max_value_mined', models.DecimalField(decimal_places=8, max_digits=18)),
                ('last_mined_block', models.PositiveIntegerField()),
                ('last_mined_blocktime', models.PositiveIntegerField()),
                ('time_stamp', models.PositiveIntegerField()),
                ('season', models.CharField(max_length=34)),
            ],
            options={
                'db_table': 'mined_count_season',
            },
        ),
        migrations.CreateModel(
            name='nn_social',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notary', models.CharField(max_length=128)),
                ('twitter', models.CharField(max_length=128)),
                ('youtube', models.CharField(max_length=128)),
                ('discord', models.CharField(max_length=128)),
                ('telegram', models.CharField(max_length=128)),
                ('github', models.CharField(max_length=128)),
                ('keybase', models.CharField(max_length=128)),
                ('website', models.CharField(max_length=128)),
                ('icon', models.CharField(max_length=128)),
                ('season', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'nn_social',
            },
        ),
        migrations.CreateModel(
            name='notarised',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('txid', models.CharField(max_length=64)),
                ('chain', models.CharField(max_length=32)),
                ('block_hash', models.CharField(max_length=64)),
                ('block_time', models.PositiveIntegerField()),
                ('block_datetime', models.DateTimeField()),
                ('block_height', models.PositiveIntegerField()),
                ('notaries', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=34), size=13)),
                ('ac_ntx_blockhash', models.CharField(max_length=64)),
                ('ac_ntx_height', models.PositiveIntegerField()),
                ('opret', models.CharField(max_length=2048)),
                ('season', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'notarised',
            },
        ),
        migrations.CreateModel(
            name='notarised_btc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('btc_txid', models.CharField(max_length=64)),
                ('btc_block_hash', models.CharField(max_length=64)),
                ('btc_block_ht', models.PositiveIntegerField()),
                ('addresses', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=34), size=13)),
                ('notaries', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=34), size=13)),
                ('kmd_txid', models.CharField(max_length=64)),
                ('kmd_block_hash', models.CharField(max_length=64)),
                ('kmd_block_ht', models.PositiveIntegerField()),
                ('opret', models.CharField(max_length=2048)),
                ('season', models.CharField(max_length=32)),
                ('test', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'notarised_btc',
            },
        ),
        migrations.CreateModel(
            name='notarised_chain_daily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notarised_date', models.DateField()),
                ('chain', models.CharField(max_length=64)),
                ('ntx_count', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'notarised_chain_daily',
            },
        ),
        migrations.CreateModel(
            name='notarised_chain_season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chain', models.CharField(max_length=64)),
                ('ntx_count', models.PositiveIntegerField()),
                ('block_height', models.PositiveIntegerField()),
                ('kmd_ntx_blockhash', models.CharField(max_length=64)),
                ('kmd_ntx_txid', models.CharField(max_length=64)),
                ('kmd_ntx_blocktime', models.PositiveIntegerField()),
                ('opret', models.CharField(max_length=2048)),
                ('ac_ntx_blockhash', models.CharField(max_length=64)),
                ('ac_ntx_height', models.PositiveIntegerField()),
                ('ac_block_height', models.CharField(max_length=34)),
                ('ntx_lag', models.CharField(max_length=34)),
                ('season', models.CharField(max_length=34)),
            ],
            options={
                'db_table': 'notarised_chain_season',
            },
        ),
        migrations.CreateModel(
            name='notarised_count_daily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notarised_date', models.DateField()),
                ('notary', models.CharField(max_length=64)),
                ('btc_count', models.PositiveIntegerField()),
                ('antara_count', models.PositiveIntegerField()),
                ('third_party_count', models.PositiveIntegerField()),
                ('other_count', models.PositiveIntegerField()),
                ('total_ntx_count', models.PositiveIntegerField()),
                ('chain_ntx_counts', django.contrib.postgres.fields.jsonb.JSONField()),
                ('chain_ntx_pct', django.contrib.postgres.fields.jsonb.JSONField()),
                ('time_stamp', models.PositiveIntegerField()),
                ('season', models.CharField(max_length=34)),
            ],
            options={
                'db_table': 'notarised_count_daily',
            },
        ),
        migrations.CreateModel(
            name='notarised_count_season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notary', models.CharField(max_length=64)),
                ('btc_count', models.PositiveIntegerField()),
                ('antara_count', models.PositiveIntegerField()),
                ('third_party_count', models.PositiveIntegerField()),
                ('other_count', models.PositiveIntegerField()),
                ('total_ntx_count', models.PositiveIntegerField()),
                ('chain_ntx_counts', django.contrib.postgres.fields.jsonb.JSONField()),
                ('chain_ntx_pct', django.contrib.postgres.fields.jsonb.JSONField()),
                ('time_stamp', models.PositiveIntegerField()),
                ('season', models.CharField(max_length=34)),
            ],
            options={
                'db_table': 'notarised_count_season',
            },
        ),
        migrations.CreateModel(
            name='notarised_tenure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chain', models.CharField(max_length=64)),
                ('first_ntx_block', models.PositiveIntegerField()),
                ('last_ntx_block', models.PositiveIntegerField()),
                ('first_ntx_block_time', models.PositiveIntegerField()),
                ('last_ntx_block_time', models.PositiveIntegerField()),
                ('ntx_count', models.PositiveIntegerField()),
                ('season', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'notarised_tenure',
            },
        ),
        migrations.CreateModel(
            name='rewards',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=34)),
                ('notary', models.CharField(max_length=34)),
                ('utxo_count', models.PositiveIntegerField()),
                ('eligible_utxo_count', models.PositiveIntegerField()),
                ('oldest_utxo_block', models.PositiveIntegerField()),
                ('balance', models.DecimalField(decimal_places=8, max_digits=18)),
                ('rewards', models.DecimalField(decimal_places=8, max_digits=18)),
                ('update_time', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'rewards',
            },
        ),
        migrations.AddConstraint(
            model_name='rewards',
            constraint=models.UniqueConstraint(fields=('address',), name='unique_reward_address'),
        ),
        migrations.AddConstraint(
            model_name='notarised_tenure',
            constraint=models.UniqueConstraint(fields=('chain', 'season'), name='unique_chain_season_tenure'),
        ),
        migrations.AddConstraint(
            model_name='notarised_count_season',
            constraint=models.UniqueConstraint(fields=('notary', 'season'), name='unique_notary_season'),
        ),
        migrations.AddConstraint(
            model_name='notarised_count_daily',
            constraint=models.UniqueConstraint(fields=('notary', 'notarised_date'), name='unique_notary_date'),
        ),
        migrations.AddConstraint(
            model_name='notarised_chain_season',
            constraint=models.UniqueConstraint(fields=('chain', 'season'), name='unique_notarised_chain_season'),
        ),
        migrations.AddConstraint(
            model_name='notarised_chain_daily',
            constraint=models.UniqueConstraint(fields=('chain', 'notarised_date'), name='unique_notarised_chain_date'),
        ),
        migrations.AddConstraint(
            model_name='notarised_btc',
            constraint=models.UniqueConstraint(fields=('btc_txid',), name='unique_btc_txid'),
        ),
        migrations.AddConstraint(
            model_name='notarised',
            constraint=models.UniqueConstraint(fields=('txid',), name='unique_txid'),
        ),
        migrations.AddConstraint(
            model_name='nn_social',
            constraint=models.UniqueConstraint(fields=('notary', 'season'), name='unique_notary_season_social'),
        ),
        migrations.AddConstraint(
            model_name='mined_count_season',
            constraint=models.UniqueConstraint(fields=('notary', 'season'), name='unique_notary_season_mined'),
        ),
        migrations.AddConstraint(
            model_name='mined_count_daily',
            constraint=models.UniqueConstraint(fields=('notary', 'mined_date'), name='unique_notary_daily_mined'),
        ),
        migrations.AddConstraint(
            model_name='mined',
            constraint=models.UniqueConstraint(fields=('block_height',), name='unique_block'),
        ),
        migrations.AddIndex(
            model_name='last_notarised',
            index=models.Index(fields=['block_time'], name='last_notari_block_t_e573bd_idx'),
        ),
        migrations.AddConstraint(
            model_name='last_notarised',
            constraint=models.UniqueConstraint(fields=('notary', 'chain'), name='unique_notary_chain'),
        ),
        migrations.AddConstraint(
            model_name='last_btc_notarised',
            constraint=models.UniqueConstraint(fields=('notary',), name='unique_notary_btc_ntx'),
        ),
        migrations.AddConstraint(
            model_name='funding_transactions',
            constraint=models.UniqueConstraint(fields=('txid', 'vout', 'category'), name='unique_category_vout_txid_funding'),
        ),
        migrations.AddConstraint(
            model_name='coins',
            constraint=models.UniqueConstraint(fields=('chain',), name='unique_chain_coin'),
        ),
        migrations.AddConstraint(
            model_name='coin_social',
            constraint=models.UniqueConstraint(fields=('chain', 'season'), name='unique_chain_season_social'),
        ),
        migrations.AddConstraint(
            model_name='chain_sync',
            constraint=models.UniqueConstraint(fields=('chain',), name='unique_chain_sync'),
        ),
        migrations.AddConstraint(
            model_name='balances',
            constraint=models.UniqueConstraint(fields=('chain', 'address', 'season'), name='unique_chain_address_season_balance'),
        ),
        migrations.AddConstraint(
            model_name='addresses',
            constraint=models.UniqueConstraint(fields=('address', 'season', 'chain'), name='unique_season_chain_address'),
        ),
    ]
